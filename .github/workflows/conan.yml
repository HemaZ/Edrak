name: Conan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
   
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.52.0

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"
      
    - name: Create default profile
      run: conan profile new default --detect
      
    - name: Update profile
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install Pangloin
      run: git clone --recursive https://github.com/stevenlovegrove/Pangolin.git && cd Pangolin  && ./scripts/install_prerequisites.sh recommended && cmake -B build && cmake --build build && sudo cmake --install build
      
    - name: Install G2o
      run: git clone https://github.com/RainerKuemmerle/g2o.git && cd g2o && cmake -B build && cmake --build build && sudo cmake --install build

    - name: Install dependencies
      run: export CONAN_SYSREQUIRES_MODE=enabled && export CONAN_SYSREQUIRES_SUDO=True && conan install . -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True --build=missing --install-folder=${{github.workspace}}/build

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
